// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/** Caleb Knight
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0                             // resetting
 * else if (load[t] == 1)  out[t+1] = in[t]                         // setting
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)// incrementing
 * else                    out[t+1] = out[t]                        // maintaining
 */

CHIP PC {
    IN in[16], load, inc, reset;
    OUT out[16];

    PARTS:
    // work from the bottom up, the last Mux is the first if
    Inc16(in=ini, out=outi);
    Mux16(a=ini, b=outi, sel=inc, out=outinc);
    Mux16(a=outinc, b=in, sel=load, out=outload);
    Mux16(a=outload, b[0..15]=false, sel=reset, out=outreset);
    Register(in=outreset, load=true, out=out, out=ini);

    // in Class implementation
    Inc16(in=outFeedback, out=incResult);
    Mux16(a=outFeedback, b=incResult, sel=inc, out=incOut);
    Mux16(a=incOut, b=in, sel=load, out=incOrDataOut);
    Mux16(a=incOrDataOut, b=false, sel=reset, out=incOrDataOrSelectOut);
    Register(in=incOrDataOrSelectOut, load=true, out=out, out=outFeedback);
}
